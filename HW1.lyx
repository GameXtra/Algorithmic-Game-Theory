#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{amsmath}
\usepackage{algorithm}
\usepackage[noend]{algpseudocode}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Algorithmic Game Theory - HW1
\end_layout

\begin_layout Author
Ido Kessler - 311398499, Jonathan Somer - 307923383
\end_layout

\begin_layout Part
Auctions
\end_layout

\begin_layout Section*
Problem 1:
\end_layout

\begin_layout Standard
Denote 
\begin_inset Formula $N$
\end_inset

 to be the set of all bidder, such that 
\begin_inset Formula $S\subseteq N$
\end_inset

.
\end_layout

\begin_layout Subsection*
Conditions:
\end_layout

\begin_layout Itemize
The bidder with the maximum private value is in 
\begin_inset Formula $S$
\end_inset

.
 We will denote her as 
\begin_inset Formula $i_{max}=\underset{i\in S}{argmax}(v_{i})=\underset{i\in N}{argmax}(v_{i})$
\end_inset


\end_layout

\begin_layout Itemize
The second highest private value is also in 
\begin_inset Formula $S$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Formula $i_{second}=\underset{i\in S\backslash\{i_{max}\}}{argmax}(v_{i})=\underset{i\in N\backslash\{i_{max}\}}{argmax}(v_{i})$
\end_inset


\end_layout

\begin_layout Subsection*
Sufficiency:
\end_layout

\begin_layout Standard
The item will always be allocated to 
\begin_inset Formula $i_{max}$
\end_inset

 , and she will pay the bid of the second highest bidder 
\begin_inset Formula $i_{second}$
\end_inset

.
 As 
\begin_inset Formula $i_{second}\in S$
\end_inset

, she can untruthfully lower her bid and improve the collective payoff.
 Bidder 
\begin_inset Formula $i_{max}$
\end_inset

 will pay less then he would have played if 
\begin_inset Formula $i_{second}$
\end_inset

 wouldn't have lied.
\end_layout

\begin_layout Subsection*
Necessity:
\end_layout

\begin_layout Standard

\series bold
Assume by contradiction that 
\begin_inset Formula $i_{max}\notin S$
\end_inset

: 
\series default
Then 
\begin_inset Formula $i_{max}\in N\backslash S$
\end_inset

 and as such no bidder in 
\begin_inset Formula $S$
\end_inset

 will get the item if bids are truthful.
 In this case 
\begin_inset Formula $S$
\end_inset

 collective payoff is 
\begin_inset Formula $0$
\end_inset

.
 Any untruthful change on the bids in 
\begin_inset Formula $S$
\end_inset

 such that the maximum remains in 
\begin_inset Formula $N\backslash S$
\end_inset

 will not change the resulting payoff.
 Assume a bid exceeded 
\begin_inset Formula $v_{i_{max}}$
\end_inset

 (
\begin_inset Formula $b_{i_{max}}$
\end_inset

), then the second is at least 
\begin_inset Formula $v_{i_{max}}$
\end_inset

, which is higher then any private value in 
\begin_inset Formula $S$
\end_inset

, resulting in a negative payoff.
 Thus if 
\begin_inset Formula $i_{max}\notin S$
\end_inset

 the collective payoff cannot be increased by untruthful bidding.
\begin_inset Newline newline
\end_inset


\series bold
We can now assume that 
\begin_inset Formula $i_{max}\in S$
\end_inset

; assume by contradiction that 
\begin_inset Formula $i_{second}\notin S$
\end_inset

:
\series default
 Any untruthful change in the bid of 
\begin_inset Formula $i_{max}$
\end_inset

 will not effect the resulting payoff as long as it's not less then 
\begin_inset Formula $i_{second}$
\end_inset

.
 Bidding less then 
\begin_inset Formula $i_{second}$
\end_inset

 will result in 
\begin_inset Formula $i_{max}$
\end_inset

 not getting the item and the payoff to be either 
\begin_inset Formula $0$
\end_inset

 or negative (in case another bidder in 
\begin_inset Formula $S$
\end_inset

 bid a higher value then 
\begin_inset Formula $i_{second}$
\end_inset

).
 Any untruthful change in the bids of 
\begin_inset Formula $S\backslash\{i_{max}\}$
\end_inset

 will result in 
\begin_inset Formula $i_{max}$
\end_inset

 paying more, or a negative payoff.
 In this case the payoff cannot be increased.
 
\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Section*
Problem 2:
\end_layout

\begin_layout Subsection*
1
\end_layout

\begin_layout Standard
Let there be some lopsided setting with an optimal allocation 
\begin_inset Formula $T^{*}$
\end_inset

 such that it holds that 
\begin_inset Formula $\underset{i\in A}{\sum v_{i}(T_{i}^{*})}\geq\frac{1}{2}\sum_{i=1}^{n}v_{i}(T_{i}^{*})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\frac{1}{2}\sum_{i=1}^{n}v_{i}(T_{i}^{*}) & \underset{i\in A}{\leq\sum v_{i}(T_{i}^{*})}\\
\frac{1}{2\sqrt{m}}\sum_{i=1}^{n}v_{i}(T_{i}^{*}) & \leq\frac{1}{\sqrt{m}}\sum_{i\in A}v_{i}(T_{i}^{*})\\
\frac{1}{2\sqrt{m}}\sum_{i=1}^{n}v_{i}(T_{i}^{*}) & \leq\frac{1}{\sqrt{m}}\sum_{i\in A}v_{i}(T_{i}^{*})\leq max_{i\in A}v_{i}(T_{i}^{*})\\
\frac{1}{2\sqrt{m}}\sum_{i=1}^{n}v_{i}(T_{i}^{*}) & \leq max_{i\in A}v_{i}(T_{i}^{*})\leq max_{i}v_{i}(T_{i}^{*}\cup M\backslash T_{i}^{*})=max_{i}v_{i}(M)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Subsection*
2
\end_layout

\begin_layout Standard
Let there be some 
\series bold
none
\series default
 lopsided setting with an optimal allocation 
\begin_inset Formula $T^{*}$
\end_inset

.
 Then it hold that 
\begin_inset Formula $\underset{i\in A}{\sum v_{i}(T_{i}^{*})}<\frac{1}{2}\sum_{i=1}^{n}v_{i}(T_{i}^{*})$
\end_inset

.
\begin_inset Newline newline
\end_inset

Note that 
\begin_inset Formula $\underset{i\in A}{\sum v_{i}(T_{i}^{*})}+\underset{i\notin A}{\sum v_{i}(T_{i}^{*})}=\sum_{i=1}^{n}v_{i}(T_{i}^{*})$
\end_inset

, so:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\underset{i\in A}{\sum v_{i}(T_{i}^{*})}<\frac{1}{2}\sum_{i=1}^{n}v_{i}(T_{i}^{*})\Rightarrow\sum_{i\notin A}v_{i}(T_{i}^{*})>\frac{1}{2}\sum_{i=1}^{n}v_{i}(T_{i}^{*})
\]

\end_inset


\begin_inset Newline newline
\end_inset

Due to subadditivity:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{1}{\sqrt{m}}\sum_{i\notin A}\sum_{t\in T_{i}^{*}}v_{i}(\{t\})\geq\frac{1}{\sqrt{m}}\sum_{i\notin A}v_{i}(T_{i}^{*})>\frac{1}{2\sqrt{m}}\sum_{i=1}^{n}v_{i}(T_{i}^{*})
\]

\end_inset


\begin_inset Newline newline
\end_inset

As 
\begin_inset Formula $|T_{i}^{*}|<\sqrt{m}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{i\notin A}max_{t\in T_{i}^{*}}(v_{i}(\{t\}))\geq\frac{1}{\sqrt{m}}\sum_{i\notin A}\sum_{t\in T_{i}^{*}}v_{i}(\{t\})>\frac{1}{2\sqrt{m}}\sum_{i=1}^{n}v_{i}(T_{i}^{*})
\]

\end_inset


\begin_inset Newline newline
\end_inset

Notice that the left size of the inequality is a description of a allocation
 of 1 item or less per bidder.
 
\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Subsection*
3
\end_layout

\begin_layout Standard
We will use the results of the last two sections where we arrived at allocation
 
\begin_inset Formula $T$
\end_inset

 that satisfied 
\begin_inset Formula $SW_{T}=\Omega(\frac{OPT}{\sqrt{m}})$
\end_inset

 
\begin_inset Newline newline
\end_inset

We also know that 
\begin_inset Formula $SW_{T}\leq OPT$
\end_inset

, and as such 
\begin_inset Formula $OPT\leq\sqrt{m}SW_{T}\leq\sqrt{m}OPT$
\end_inset

.
 This means that 
\begin_inset Formula $\sqrt{m}SW_{T}$
\end_inset

 is 
\begin_inset Formula $O(\sqrt{m})$
\end_inset

-approximate by definition.
\end_layout

\begin_layout Subsubsection*
Algorithm:
\end_layout

\begin_layout Standard
As we do not know if this is a lopsided setting or not.
 We will run two 
\begin_inset Quotes eld
\end_inset

sub-algorithms
\begin_inset Quotes erd
\end_inset

 that will produce a 
\begin_inset Formula $O(\sqrt{m})$
\end_inset

-approximate result for each setting.
 Due to the fact that the closer solution must be the larger we can simply
 return the maximum of both.
 
\begin_inset Newline newline
\end_inset


\series bold
For lopsided settings:
\end_layout

\begin_layout Standard
Evaluate the 
\begin_inset Formula $SW$
\end_inset

 resulting from allocationg all goods to a single player for each of the
 players.
 Denote the resulting allocation as 
\begin_inset Formula $T_{lop}$
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
For none-lopsided settings:
\end_layout

\begin_layout Standard
Due to the fact that in the non-lopsided setting there exists an 
\begin_inset Formula $O(\sqrt{m})$
\end_inset

-approximate allocation which allocates at most one item to each bidder
 we can use a 
\begin_inset Quotes eld
\end_inset

bipartite matching
\begin_inset Quotes erd
\end_inset

 solution.
 Create a bipartite graph with the 
\begin_inset Formula $n$
\end_inset

 bidders connected to the 
\begin_inset Formula $m$
\end_inset

 items with edges weighted 
\begin_inset Formula $v_{i}(M_{j})$
\end_inset

 on the edge between the bidder 
\begin_inset Formula $i$
\end_inset

 and the item 
\begin_inset Formula $j$
\end_inset

.
 Using max maching algorithm we can compute the maximal match in 
\begin_inset Formula $O(V^{2}E)$
\end_inset

, which in our case is 
\begin_inset Formula $O((m+n)^{2}\cdot mn)$
\end_inset

, which is poly-time.
 Denote the resulting allocation as 
\begin_inset Formula $T_{non-lop}$
\end_inset


\begin_inset Newline newline
\end_inset

Running both algorithms is still poly-time, and choosing the maximal allocation
 between 
\begin_inset Formula $T_{lop}$
\end_inset

 and 
\begin_inset Formula $T_{non-lop}$
\end_inset

 guarantees a 
\begin_inset Formula $O(\sqrt{m})$
\end_inset

-approximate allocation.
\end_layout

\begin_layout Subsection*
4
\end_layout

\begin_layout Standard
We will use the result of section 
\begin_inset Formula $3$
\end_inset

 in order to archive a 
\begin_inset Formula $SW$
\end_inset

 allocation in poly-time, and archive a truthful combinatorial auction using
 the VCG (Vickrey–Clarke–Groves) auction mechanism.
 
\end_layout

\begin_layout Subsubsection*
Prices:
\end_layout

\begin_layout Standard
Denote 
\begin_inset Formula $w^{*}$
\end_inset

as the allocation that was chosen, 
\begin_inset Formula $\Omega$
\end_inset

 as the group of all possible allocation,
\begin_inset Formula $b$
\end_inset

 as the vector of the bidder bids for all subgroups, and 
\begin_inset Formula $b_{i}(w)$
\end_inset

 as the bid that player 
\begin_inset Formula $i$
\end_inset

 was allocated with in the allocation 
\begin_inset Formula $w$
\end_inset

.
 
\begin_inset Newline newline
\end_inset

Using the VCG mechanism, we know that bidder 
\begin_inset Formula $i$
\end_inset

 will pay using the next expression:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p_{i}(b)=\underset{w\in\Omega}{max}\underset{j\ne i}{\Sigma}b_{j}(w)-\underset{j\ne i}{\Sigma}b_{j}(w^{*})
\]

\end_inset


\end_layout

\begin_layout Subsubsection*
Caculating the values in polytime:
\end_layout

\begin_layout Standard
Computing 
\begin_inset Formula $\underset{j\ne i}{\Sigma}b_{j}(w^{*})$
\end_inset

 is poly-time, as it only sun 
\begin_inset Formula $n$
\end_inset

 values and as such calculating this is in poly-time - 
\begin_inset Formula $O(n)$
\end_inset

.
\begin_inset Newline newline
\end_inset

Computing 
\begin_inset Formula $\underset{w\in\Omega}{max}\underset{j\ne i}{\Sigma}b_{j}(w)$
\end_inset

 depend on the ability to find the maximum 
\begin_inset Formula $w$
\end_inset

 in 
\begin_inset Formula $\Omega$
\end_inset

.
 In our case, 
\begin_inset Formula $\Omega$
\end_inset

 is the available possible allocations, which contain two diffrent sets
 of allocation types: lopsided allocations and non-lopsided allocations.
\begin_inset Newline newline
\end_inset


\series bold
Lopsided alloctions:
\series default
 Allocations containing only one bidder who recive all the items.
 There are only 
\begin_inset Formula $n$
\end_inset

 such allocations, and as such the maximum 
\begin_inset Formula $w$
\end_inset

 can be found in a 
\begin_inset Formula $O(n^{2})$
\end_inset

 time using a naive approch - poly-time.
\begin_inset Newline newline
\end_inset


\series bold
Non-Lopsided Allocations: 
\series default
Allocations that for each bidder allocate no more then 1 item.
 The number of such allocations is not in poly-space, and as such the 
\begin_inset Quotes eld
\end_inset

naive
\begin_inset Quotes erd
\end_inset

 computation of the expression is not in poly-time as well.
 To solve this we can use a 
\begin_inset Quotes eld
\end_inset

bipartite matching
\begin_inset Quotes erd
\end_inset

 solution to find the maximal match without the current bidder 
\begin_inset Formula $i$
\end_inset

.
 Create a bipartite graph with the 
\begin_inset Formula $n-1$
\end_inset

 bidders (Without the current bidder 
\begin_inset Formula $i$
\end_inset

) connected to the 
\begin_inset Formula $m$
\end_inset

 items with edges weighted 
\begin_inset Formula $v_{k}(M_{j})$
\end_inset

 on the edge between the bidder 
\begin_inset Formula $k$
\end_inset

 and the item 
\begin_inset Formula $j$
\end_inset

.
 Using max maching algorithm we can compute the maximal match in 
\begin_inset Formula $O(V^{2}E)$
\end_inset

, which in our case is 
\begin_inset Formula $O((m+n)^{2}\cdot mn)$
\end_inset

, which is poly-time.
\begin_inset Newline newline
\end_inset

After computing the maximum value for both the lopsided case and the non-lopside
d case, we can take the maximal value.
\end_layout

\begin_layout Subsubsection*
Complexity:
\end_layout

\begin_layout Standard
In order to compute the prices for all the bidders we need to run the algorithm
 
\begin_inset Formula $n$
\end_inset

 times: 
\begin_inset Formula $O(n*(n+n^{2}+(m+n)^{2}\cdot mn))$
\end_inset

 which is in poly-time.
\end_layout

\begin_layout Subsubsection*
Correctness:
\end_layout

\begin_layout Standard
The VCG mechanism assure us that truthful strategy is a dominent strategy
 for this auction.
 While the bids for all the subset of the items that are bigget then 2 and
 are less then m, are not used in the allocation and prices, it still holds
 that the truthful strategy is dominant.
 This holds because while the bidder can lie in all the bids that are not
 used - it will hold no effect on the result, so the truthful strategy is
 one of many dominant strategies in this auction.
\end_layout

\begin_layout Part
Sponsored Search
\end_layout

\begin_layout Section*
Problem 3:
\end_layout

\begin_layout Subsection*
Allocation rule:
\end_layout

\begin_layout Standard
Define 
\begin_inset Formula $b'_{i}=v_{i}\beta_{i}=b_{i}\beta_{i}$
\end_inset

.
 Our new allocation assigns the 
\begin_inset Formula $i$
\end_inset

th highest 
\begin_inset Formula $\mathbf{b}'$
\end_inset

 bidder to the 
\begin_inset Formula $i$
\end_inset

th best slot.
 
\end_layout

\begin_layout Subsubsection*
Claim: the new allocation rule is monotone
\end_layout

\begin_layout Standard
Recall the definition for a 
\series bold
monotone allocation rule:
\end_layout

\begin_layout Quote
An allocation rule 
\begin_inset Formula $\mathbf{x}$
\end_inset

 for a single-paramater environment is monotone if for every agent 
\begin_inset Formula $i$
\end_inset

 and bids 
\begin_inset Formula $\mathbf{b_{-i}}$
\end_inset

, the allocation 
\begin_inset Formula $\mathbf{x_{i}}(z,\mathbf{b_{-i}})$
\end_inset

 is non-decreasing in her bid 
\begin_inset Formula $z$
\end_inset

.
 
\end_layout

\begin_layout Standard
It is clear that 
\begin_inset Formula $\mathbf{x_{i}}(z,\mathbf{b'_{-i}})$
\end_inset

 is non-decreasing in 
\begin_inset Formula $z$
\end_inset

, because increasing 
\begin_inset Formula $z$
\end_inset

 will result in a higher place amongst the 
\begin_inset Formula $b'$
\end_inset

 bids (assuming 
\begin_inset Formula $\forall i:\beta_{i}\geq0$
\end_inset

).
\end_layout

\begin_layout Subsection*
DSIC Pricing:
\end_layout

\begin_layout Standard
Recall Myerson's payment formula: 
\begin_inset Formula 
\[
p_{i}(\mathbf{b})=\sum_{j=1}^{k}b_{j+1}(\alpha_{j}-\alpha_{j+1})
\]

\end_inset

 We define a new payment formula:
\begin_inset Formula 
\[
p_{i}(\mathbf{b'})=\sum_{j=1}^{k}b'_{j+1}(\alpha_{j}-\alpha_{j+1})=\sum_{j=1}^{k}b{}_{j+1}\beta_{j+1}(\alpha_{j}-\alpha_{j+1})
\]

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Claim: the new payment formula is DSIC
\end_layout

\begin_layout Standard
Assume that in some other setting, the players' valuations correspond to
 
\begin_inset Formula $\mathbf{b'}$
\end_inset

.
 That is, player 
\begin_inset Formula $i'$
\end_inset

 has a valuation and bid of 
\begin_inset Formula $v'_{i}=b'_{i}=b_{i}\beta_{i}$
\end_inset

.
 By Myerson's lemma our payment formula is DSIC, as the allocation rule
 is the same one used in the original proof and the payment is too.
\begin_inset Newline newline
\end_inset

Assume by contradiction that some player 
\begin_inset Formula $i$
\end_inset

 in the original setting can benefit from non-truthful bidding under the
 new payment scheme.
 Let 
\begin_inset Formula $b_{i\text{-fake}}\neq b_{i}$
\end_inset

 be the new and more benefitial bid for player 
\begin_inset Formula $i$
\end_inset

.
 Since 
\begin_inset Formula $b'_{i}=b_{i}\beta_{i}\ne b_{i\text{-fake}}\beta_{i}$
\end_inset

 it follows that player 
\begin_inset Formula $i'$
\end_inset

 could benefit by bidding 
\begin_inset Formula $b_{i\text{-fake}}\beta_{i}$
\end_inset

 instead of 
\begin_inset Formula $b'_{i}$
\end_inset

.
 In contradiction to Myerson's lemma.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Part
VCG
\end_layout

\begin_layout Section*
Problem 4:
\end_layout

\begin_layout Subsection*
1
\end_layout

\begin_layout Standard
We shall show a case where this is true.
\end_layout

\begin_layout Subsubsection*
The initial state (truthful state):
\end_layout

\begin_layout Itemize
Two items: 
\begin_inset Formula $\{i_{1},i_{2}\}$
\end_inset


\end_layout

\begin_layout Itemize
Two players: 
\begin_inset Formula $\{1,2\}$
\end_inset


\end_layout

\begin_layout Itemize
Valuations & bids:
\begin_inset Formula 
\[
b_{1}(\text{set})=v_{1}(\text{set})=\begin{cases}
2 & \text{set}=\{i_{1},i_{2}\}\\
0 & \text{else}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
b_{2}(\text{set})=v_{2}(\text{set})=\begin{cases}
1 & \text{set}=\{i_{1},i_{2}\}\\
0 & \text{else}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
In this case the 
\begin_inset Formula $VCG$
\end_inset

 allocates both items to player 1.
 And her payment is given by:
\begin_inset Formula 
\[
p_{1}=\underset{\omega\in\Omega}{\text{max}}\sum_{j\neq i}b_{i}(\omega)-(\sum_{j\neq i}b_{i}(\omega^{*}))=1-0=1
\]

\end_inset


\begin_inset Formula 
\[
u_{1}=v_{1}(\text{set})-p_{1}=2-1=1
\]

\end_inset

 We now show how player 1 can bid non-truthfully and increase her utility:
\end_layout

\begin_layout Subsubsection*
Player 1 bids untruthfully:
\end_layout

\begin_layout Itemize
Two items: 
\begin_inset Formula $\{i_{1},i_{2}\}$
\end_inset


\end_layout

\begin_layout Itemize
Three players: 
\begin_inset Formula $\{1_{a},1_{b},2\}$
\end_inset

 
\end_layout

\begin_layout Itemize
Bids:
\begin_inset Formula 
\[
b_{1_{a}}(\text{set})=\begin{cases}
1 & \text{set}=\{i_{1}\}\\
0 & \text{else}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
b_{1_{b}}(\text{set})=\begin{cases}
1 & \text{set}=\{i_{2}\}\\
0 & \text{else}
\end{cases}
\]

\end_inset


\begin_inset Formula 
\[
b_{2}(\text{set})=v_{2}(\text{set})=\begin{cases}
1 & \text{set}=\{i_{1},i_{2}\}\\
0 & \text{else}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
In this case 
\begin_inset Formula $VCG$
\end_inset

 allocates 
\begin_inset Formula $i_{1}$
\end_inset

 to 
\begin_inset Formula $1_{a}$
\end_inset

 and 
\begin_inset Formula $i_{2}$
\end_inset

 to 
\begin_inset Formula $1_{b}$
\end_inset

 acheiving a maximal welfare of 2.
 The payment of players 
\begin_inset Formula $1_{a},1_{b}:$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p_{1_{a}}=\underset{\omega\in\Omega}{\text{max}}\sum_{j\neq i}b_{i}(\omega)-(\sum_{j\neq i}b_{i}(\omega^{*}))=1-1=0
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p_{1_{b}}=\underset{\omega\in\Omega}{\text{max}}\sum_{j\neq i}b_{i}(\omega)-(\sum_{j\neq i}b_{i}(\omega^{*}))=1-1=0
\]

\end_inset


\end_layout

\begin_layout Standard
And in total: 
\begin_inset Formula 
\[
u_{1}=v_{1}(\{i_{1},i_{2}\})-(p_{1_{a}}+p_{1_{b}})=2-0=2
\]

\end_inset


\end_layout

\begin_layout Standard
By bidding untruthfully we have improved the utility of player 1 by 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Subsection*
2
\end_layout

\begin_layout Standard
We shall disprove the claim.
 We assume the other bidders bid truthfully.
 
\end_layout

\begin_layout Subsubsection*
CASE 1: con-bidder's value is less than the top bid made by another player
\end_layout

\begin_layout Standard
Utility will be 0 for con-bidder as the item is not allocated to him.
 Any non-truthful bid which does not change the top bid will have no effect
 on the resulting allocation.
 In addition any non-truthful which does change the top bid will result
 in con-bidder paying more than he values and this will result in a negative
 utility.
 Thus, in the case where the con-bidder's value is less than the top bid
 made by another player there is no way for her to improve her outcome via
 non-truthful bidding.
\end_layout

\begin_layout Subsubsection*
CASE 2: con-bidder's value is more than the top bid made by another player:
 
\end_layout

\begin_layout Standard
In a second price auction, the two bids which affect the resulting allocation
 and pricing (the 
\begin_inset Quotes eld
\end_inset

result
\begin_inset Quotes erd
\end_inset

) are the first and second bids.
 We shall use this fact in order to define our cases.
 
\end_layout

\begin_layout Subsubsection*
case 2a: Highest bid is not made by the con-bidder
\end_layout

\begin_layout Standard
In this case the item will not be allocated to our player.
 By bidding truthfully our player would have acheived a positive utility,
 so this case does not improve the outcome for our player.
\end_layout

\begin_layout Subsubsection*
case 2b: Highest bid is made by the con-bidder
\end_layout

\begin_layout Standard
It does not matter what the exact value of the first bid is because its
 only effect is allocating the item to our player.
 Any non-truthful bid lower then the highest bid made by another player
 will not affect the pricing.
 Any non-truthful bid higher than the second highest bid will result in
 our player paying more but does not change the allocation and is a worse
 outcome overall.
 
\end_layout

\begin_layout Standard
\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Part
Online bipartite matching
\end_layout

\begin_layout Subsection*
1
\end_layout

\begin_layout Subsubsection*
(i) 
\begin_inset Formula $u_{i}^{\pi,\mathbf{p}}\geq1-p$
\end_inset

 for any 
\begin_inset Formula $p_{j}$
\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $p_{j}\geq p$
\end_inset

 then item 
\begin_inset Formula $j$
\end_inset

 will not have an effect on the items available to player 
\begin_inset Formula $i$
\end_inset

 and player 
\begin_inset Formula $i$
\end_inset

 will have a utility of 
\begin_inset Formula $1-p$
\end_inset

.
 If 
\begin_inset Formula $p_{j}\leq p$
\end_inset

, item j' (the one player 
\begin_inset Formula $i$
\end_inset

 took under 
\begin_inset Formula $\mathbf{\mathbf{p}_{-j}}$
\end_inset

) will still be available to player 
\begin_inset Formula $i$
\end_inset

 so 
\begin_inset Formula $u_{i}^{\pi,\mathbf{p}}\geq1-p$
\end_inset

.
 (it is an easy induction to show that any player before 
\begin_inset Formula $i$
\end_inset

 might improve her utility but none will worsen it by taking 
\begin_inset Formula $j'$
\end_inset

)
\end_layout

\begin_layout Subsubsection*
(ii) 
\end_layout

\begin_layout Standard
Assume by contradiction that item 
\begin_inset Formula $j$
\end_inset

 is not matched.
 Then in player 
\begin_inset Formula $i$
\end_inset

's turn 
\begin_inset Formula $j$
\end_inset

 was not matched.
 The set of of matched items at this point must be the same as under 
\begin_inset Formula $\mathbf{p_{-j}}$
\end_inset

 or else at some point some player made a sub-optimal decision.
 In player 
\begin_inset Formula $i's$
\end_inset

 turn she chooses item with 
\begin_inset Formula $p>p_{j}$
\end_inset

 in contradiction to the way a player chooses an item.
\end_layout

\begin_layout Subsection*
2 
\end_layout

\begin_layout Standard
Calculating 
\begin_inset Formula $\mathbb{E}_{\omega}[u_{i}]$
\end_inset

, using (i):
\begin_inset Formula 
\[
\mathbb{E}_{\omega}[u_{i}]=[\text{fix some random order on \ensuremath{L} \ensuremath{\pi} and some \ensuremath{\mathbf{p}_{-j}}}]=\mathbb{E}_{\omega}[u_{i}^{\pi,\mathbf{p}}]\geq1-p
\]

\end_inset

 Where 
\begin_inset Formula $p$
\end_inset

 is the price of the item agent 
\begin_inset Formula $i$
\end_inset

 would take in 
\begin_inset Formula $R\backslash\{j\}$
\end_inset

 under 
\begin_inset Formula $\mathbf{p}_{-j}$
\end_inset

 (as in (i) we set 
\begin_inset Formula $p=1$
\end_inset

 if there is no such).
 The last inequality is simply due to 
\begin_inset Formula $u_{i}^{\pi,\mathbf{p}}\geq1-p$
\end_inset

, so the expectation must be larger than 
\begin_inset Formula $1-p$
\end_inset

 too.
 
\begin_inset Newline newline
\end_inset

Calculating 
\begin_inset Formula $\mathbb{E}_{\omega}[r_{j}]$
\end_inset

 using (ii):
\begin_inset Formula 
\[
\mathbb{E}_{\omega}[r_{j}]=\mathbb{E}_{\omega}[\mathbf{1}^{\text{item j was taken by player i}}\cdot p_{j}]\underset{\text{from (ii)}}{=}\mathbb{E}_{\omega}[\mathbf{1}^{p_{j}<p}\cdot p_{j}]=
\]

\end_inset


\end_layout

\begin_layout Standard
Notice that we can view this as the expectation of a continuous uniform
 random variable, between 0 to 1, and compute 
\begin_inset Formula $\mathbb{E}_{\omega}[r_{j}]$
\end_inset

 as the integral over all value from 0 to 1.
 Also notice that because we are working with a uniform distribution over
 
\begin_inset Formula $[0,1]$
\end_inset

 the density is 
\begin_inset Formula $\frac{1}{b-a}$
\end_inset

 which in our case is 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Standard
We will denote 
\begin_inset Formula $p=e^{\omega-1}$
\end_inset

, 
\begin_inset Formula $p_{j}=e^{\omega_{j}-1}$
\end_inset

: 
\begin_inset Formula 
\[
\int_{0}^{1}1\cdot(\mathbf{\mathbf{1}^{p_{j}<p}}\cdot e^{\omega_{j}-1})d\omega_{j}=\int_{w}^{1}0\cdot e^{\omega_{j}-1}d\omega_{j}+\int_{0}^{\omega}1\cdot e^{\omega_{j}-1}d\omega_{j}=e^{\omega-1}-e^{-1}=p-\frac{1}{e}
\]

\end_inset


\end_layout

\begin_layout Standard
Finally, using the linearity of expecation:
\begin_inset Formula 
\[
\mathbb{E}_{\omega}[u_{i}+r_{j}]=\mathbb{E}_{\omega}[u_{i}]+\mathbb{E}_{\omega}[r_{j}]\geq(1-p)+(p-\frac{1}{e})=1-\frac{1}{e}
\]

\end_inset

 
\begin_inset Formula $\square$
\end_inset


\end_layout

\end_body
\end_document

#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{amsmath}
\usepackage{algorithm}
\usepackage[noend]{algpseudocode}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Algorithmic Game Theory - HW1
\end_layout

\begin_layout Author
Ido Kessler - 311398499, Jonathan Somer - 307923383
\end_layout

\begin_layout Part
Gross substitute valuations
\end_layout

\begin_layout Section*
Problem 1:
\end_layout

\begin_layout Standard
\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Section*
Problem 2:
\end_layout

\begin_layout Standard
asd
\end_layout

\begin_layout Part
Walrasian Equilibrium
\end_layout

\begin_layout Section*
Problem 3:
\end_layout

\begin_layout Subsection*
1
\end_layout

\begin_layout Subsubsection*
Difinitions:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $G=([n],[m])$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $G_{I}=([m],E,w)$
\end_inset

 where 
\begin_inset Formula $E=\{(j,j')|j,j'\in[m],j\ne j'\}$
\end_inset

 and where for the item 
\begin_inset Formula $j$
\end_inset

 that was chosen by 
\begin_inset Formula $i$
\end_inset

 in the matching 
\begin_inset Formula $M$
\end_inset

 it applies that 
\begin_inset Formula $w((j,j'))=u_{i}(\{j\})-u_{i}(\{j'\})$
\end_inset

 
\end_layout

\begin_layout Standard
Assume that the new graph has a negative cycles.
 We can then get a bettet weighted match! Denote 
\begin_inset Formula $\pi$
\end_inset

 as out cycle edges:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Sigma_{(j,j')\in\pi}v_{i}(j)-v_{i}(j')<0
\]

\end_inset


\end_layout

\begin_layout Standard
Denote the group of items on this cycle and their match as 
\begin_inset Formula $S=\{(i,j)|(i,j)\in M,\exists j'.(j,j')\in\pi\}$
\end_inset

, then the part of those vertices in the match sum is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Sigma_{(i,j)\in S}v_{i}(j)
\]

\end_inset


\end_layout

\begin_layout Standard
But this is impossible, as we can improve this part if the sum only while
 using the current agent and items by switching the cycle direction and
 rotating the owners on the sycle by one in the original direction:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Sigma_{(j,j')\in\pi}v_{i}(j')-v_{i}(j)>0
\]

\end_inset


\end_layout

\begin_layout Standard
Denote the new group if items as 
\begin_inset Formula $S'$
\end_inset

 and we get that 
\begin_inset Formula $\Sigma_{(i,j)\in S}v_{i}(j)<\Sigma_{(i,j')\in S}v_{i}(j')$
\end_inset

! If so 
\begin_inset Formula $M$
\end_inset

 was not a max weighted match.
\end_layout

\begin_layout Standard
\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Subsubsection*
2
\end_layout

\begin_layout Standard
From the last section we know that if we switch the directoin of the edges
 on the cylce we will stay with the same match weighted value as in the
 original 
\begin_inset Formula $M$
\end_inset

.
 But it was explicitly said that 
\begin_inset Formula $M$
\end_inset

 is 
\series bold
unique
\series default
, and as such this is not possible.
\end_layout

\begin_layout Subsubsection*
3 ##################################### assume single item instead of multi
 items
\end_layout

\begin_layout Standard
First notice that we do not have any vertex in 
\begin_inset Formula $V_{i}$
\end_inset

 that it's min distance from 
\begin_inset Formula $s$
\end_inset

 is bigger then 
\begin_inset Formula $0$
\end_inset

.
 Secondly because we cannot return to 
\begin_inset Formula $s$
\end_inset

 we didnt create any new cycle in 
\begin_inset Formula $G_{i}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Another cool property is that every minimum path must start with a node
 with minimum distance of 
\begin_inset Formula $0$
\end_inset

.
 Assume it doesn't - then we can use the negative path to it to get our
 current path even lower.
\end_layout

\begin_layout Standard
Now assume we give the item the prices 
\begin_inset Formula $p_{j}=-d_{s\rightarrow j}$
\end_inset

.
 Using the same idea from before we can then conclude that for each prefix
 of the min path - it is also the min path to the prefix endpoint.
 The last item in the path is define as the item that the min distance 
\begin_inset Formula $+$
\end_inset

 the gain you would have from switching the agent 
\begin_inset Formula $i$
\end_inset

 item 
\begin_inset Formula $j$
\end_inset

 with item 
\begin_inset Formula $j'$
\end_inset

 is minimal.
\end_layout

\begin_layout Standard
Now, We wish to find prices 
\begin_inset Formula $P$
\end_inset

 such that the matching 
\begin_inset Formula $M$
\end_inset

 is which is a single item for each bidder is in the demand-set of each
 bidder.
 Formaly 
\begin_inset Formula $\forall i\in n.\{j\}\in\{S|\forall T\in[m].v_{i}(S)-p(S)\geq v_{i}(T)-p(T)\}$
\end_inset

.
\end_layout

\begin_layout Standard
To archive this we have to provide with prices such that for each 
\begin_inset Formula $(i,j)$
\end_inset

 in the match 
\begin_inset Formula $M$
\end_inset

 it holds that 
\begin_inset Formula $\forall T\in[m].v_{i}(j)-p_{j}\geq\Sigma_{j'\in T}v_{i}(j')-\Sigma_{j'\in T}p_{j'}$
\end_inset

.
\end_layout

\begin_layout Standard
Now we can show that the prices we chose 
\begin_inset Formula $p_{j}=-d_{s\rightarrow j}$
\end_inset

 provide us with the state! Assume that for some bidder 
\begin_inset Formula $i$
\end_inset

 there exist 
\begin_inset Formula $j'$
\end_inset

 such that 
\begin_inset Formula $v_{i}(\{j'\})-p_{j'}>v_{i}(\{j\})-p_{j}$
\end_inset

.
 Where 
\begin_inset Formula $j$
\end_inset

 is the item matched to 
\begin_inset Formula $i$
\end_inset

.
 This means that:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v_{i}(j')+d_{s\rightarrow j'}>v_{i}(j)+d_{s\rightarrow j}
\]

\end_inset


\end_layout

\begin_layout Standard
Which means:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
d_{s\rightarrow j'}>d_{s\rightarrow j}+v_{i}(j)-v_{i}(j')=d_{s\rightarrow j}+w((j,j'))\ge d_{s\rightarrow j'}
\]

\end_inset


\end_layout

\begin_layout Standard
This cannot be! And as such the prices a Walrasian prices.
\end_layout

\begin_layout Subsubsection*
4########################### assume single item instead of multi items
\end_layout

\begin_layout Standard
After computing the prices we might still have two set of items that get
 the same SW gain.
 To solve this we can look at each such case: Assume we have 
\begin_inset Formula $j$
\end_inset

 and 
\begin_inset Formula $j'$
\end_inset

 such that for 
\begin_inset Formula $(i,j)\in M$
\end_inset

 it holds that 
\begin_inset Formula $v_{i}(\{j'\})-p_{j'}=v_{i}(\{j\})-p_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
We want to change the edges in such a way that it holds that 
\begin_inset Formula $v_{i}(\{j'\})-p_{j'}>v_{i}(\{j\})-p_{j}$
\end_inset

.
 We can do the following: 
\begin_inset Formula $p_{j}-p_{j'}\ge v_{i}(j)-v_{i}(j')=w((j,j'))>w((j,j'))-\epsilon$
\end_inset

; but removing 
\begin_inset Formula $\epsilon$
\end_inset

 from all the edge might couse as a .
 While this will indeed solve the problem, we cannot be sure of the resulting
 paths to be minimal any longer, as there might be negative cycles now.
 But this can be left aside as there were no 
\begin_inset Formula $0$
\end_inset

 cycles in the graph!
\end_layout

\begin_layout Section*
Problem 3b:###############from michal article.
 Maybe edit?
\end_layout

\begin_layout Standard
let's consider the following scheme: 3 items and 3 agent:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $v_{1}=[1,1,0]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $v_{2}=[1,0,1]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $v_{3}=[0,1,1]$
\end_inset


\end_layout

\begin_layout Standard
Assume that we have some prices 
\begin_inset Formula $p$
\end_inset

 and they are all less or equal then 1, then if 
\begin_inset Formula $p_{1}\ge p_{3}\ge p_{2}$
\end_inset

 then we get that if agent 1 arrive first and take 1, then agent 2 arrives
 and take 3, and then agent 3 arrive and find that there is no more element
 to take.
 This is a 
\begin_inset Formula $2/3$
\end_inset

 allocation.
 This show that for any fixed prices theme there is some order that leads
 to worst case of 
\begin_inset Formula $2/3$
\end_inset

 of the OPT!
\end_layout

\end_body
\end_document
